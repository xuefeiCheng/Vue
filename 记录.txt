本学习历程 根据 Vue.js中文文档【https://cn.vuejs.org/v2/guide/instance.html】学习
官方文档为【https://vuejs.org/v2/guide/syntax.html】
兼容性问题：vue.js不支持ie8以下的浏览器，原因是：ie8以下不能支持es5。
使用方式：直接使用 script 标签引入即可。或者使用 cdn
注：在使用vue.js构建大型应用时，推荐使用npm构建应用。
在学习vue.js时，没有使用 npm，下载的js文件是 开发环境所使用的（能够给出错误友好提示）；

自定义组件与自定义元素感觉很相似；
1.Web 组件规范仍然处于草案阶段，并且尚无浏览器原生实现。相比之下，Vue 组件不需要任何补丁，并且在所有支持的浏览器（IE9 及更高版本）之下表现一致。必要时，Vue 组件也可以包装于原生自定义元素之内。
2.Vue 组件提供了纯自定义元素所不具备的一些重要功能，最突出的是跨组件数据流，自定义事件通信以及构建工具集成。
其中自定义组件，可以使应用组件化，以便于开发管理，从总体上 结构更清晰。
这样一个 界面就可以组件化为：
<div id="app">
  <app-nav></app-nav>
  <app-view>
    <app-sidebar></app-sidebar>
    <app-content></app-content>
  </app-view>
</div>
很类似 angularjs自带的指令，ng-view，实现界面嵌套。

vue.js构造器不是很懂，官网中没有一个例子，百度搜索到的，感觉和官网的定义有点不太一样，更像是自定义一个组件或者元素。

vue属性与方法
每一个vue应用都需要构造器构造一个根实例，好比是根作用域；在此实例中，都会展示（代理）它内部的data字段中的属性。
在外部定义的data对象中含有一个属性 a，属性值为1；则在根实例中的data字段中定义 data：data；
则在根实例中实质代理的是data对象，他也有a属性。
代理的响应式双向的，实例中的属性变化会相应的重新渲染界面中的属性值。若data对象的属性值发生变化，那根实例中的属性值也会改变。
但是 现在是 根实例中的data字段指代的是 data对象，是同名的，会让人模糊。
所以在vue应用中，提供了一些有用的实例属性与方法，这些实例都有前缀 $，一旦出现此前缀，意思就是修改的死根实例中的 字段，例如 $el
同时也提供了 一些实例方法，例如 $watch 用于监听 属性 for example：vm1.$watch('b', function(newVal, oldVal) {//只用在属性b发生变化的时候，才会调用此方法})
vm1 是 vue应用构造的根实例

关于git 又学到了一手，逛知乎的时候，看到的。
在代码提交之前一定要 git diff（svn diff）一下，学会查看代码更改。
之前只是会看一下 代码仓库中的 git状态，现在可以看一下 ，代码具体更改情况了。